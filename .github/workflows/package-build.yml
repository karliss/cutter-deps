name: package build

on:
  push:
    branches:
    - master
    tags:
    - v*
  pull_request:
    branches:
    - master

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: build linux
      run: |
        set -euo pipefail
        sudo apt install libclang-11-dev llvm-11 mesa-common-dev libgl1-mesa-dev
        make
        echo UPLOAD_FILE=cutter-deps-linux-x86_64.tar.gz >> $GITHUB_ENV
        echo UPLOAD_ASSET_TYPE=application/gzip >> $GITHUB_ENV
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.UPLOAD_FILE }}
        path: ${{ env.UPLOAD_FILE }}
    - name: Get release
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      id: get_release
      uses: karliss/get-release@bee343636450eb2e9b85d9f1592d8d73c408dc74
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload release assets
      if: steps.get_release.outputs.upload_url != null
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ env.UPLOAD_FILE }}
          asset_name: ${{ env.UPLOAD_FILE }}
          asset_content_type: ${{ env.UPLOAD_ASSET_TYPE }}

  build-macos:
    runs-on: macos-10.15
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: build macos
      run: |
        set -euo pipefail
        brew install llvm ccache
        export PATH=/usr/local/opt/llvm/bin:$PATH;
        xcode-select -print-path
        ls /Applications
        sudo xcode-select -s /Applications/Xcode_11.2.1.app/Contents/Developer
        # sudo xcode-select -s /Applications/Xcode_11.5.app/Contents/Developer
        xcode-select -print-path
        which llvm-config
        llvm-config --version
        export MACOSX_DEPLOYMENT_TARGET=10.14
        make
        echo UPLOAD_FILE=cutter-deps-macos-x86_64.tar.gz >> $GITHUB_ENV
        echo UPLOAD_ASSET_TYPE=application/gzip >> $GITHUB_ENV
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.UPLOAD_FILE }}
        path: ${{ env.UPLOAD_FILE }}
    - name: Get release
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      id: get_release
      uses: karliss/get-release@bee343636450eb2e9b85d9f1592d8d73c408dc74
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload release assets
      if: steps.get_release.outputs.upload_url != null
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ env.UPLOAD_FILE }}
          asset_name: ${{ env.UPLOAD_FILE }}
          asset_content_type: ${{ env.UPLOAD_ASSET_TYPE }}
