name: package build

on:
  push:
    branches:
    - qt5
    tags:
    - qt5-v*
  pull_request:
    branches:
    - qt5

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: set timezone
      run: |
        # Fix timezone on ubuntu to prevent user input request during the apt-get phase.
        export TZ=UTC
        ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    - name: build linux
      shell: bash
      run: |
        apt-get -y update
        apt-get -y install build-essential \
                             libclang-8-dev \
                             llvm-8 \
                             libglib2.0-dev \
                             mesa-common-dev \
                             libgl1-mesa-dev \
                             zlib1g-dev \
                             libpcre2-dev \
                             cmake \
                             curl \
                             wget
        make
        echo UPLOAD_FILE=cutter-deps-linux-x86_64.tar.gz >> $GITHUB_ENV
        echo UPLOAD_ASSET_TYPE=application/gzip >> $GITHUB_ENV
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ env.UPLOAD_FILE }}
        path: ${{ env.UPLOAD_FILE }}
    - name: Get release
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      id: get_release
      uses: karliss/get-release@bee343636450eb2e9b85d9f1592d8d73c408dc74
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload release assets
      if: steps.get_release.outputs.upload_url != null
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ env.UPLOAD_FILE }}
          asset_name: ${{ env.UPLOAD_FILE }}
          asset_content_type: ${{ env.UPLOAD_ASSET_TYPE }}

